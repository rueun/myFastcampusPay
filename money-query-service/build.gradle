plugins {
    id 'com.palantir.docker' version '0.25.0'
}
ext{
    axonVersion = "4.8.0"
}

group = 'com.fastcampuspay.money-query'
version = '1.0.0'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation project(path: ':common')

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'junit:junit:4.13.1'
    implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
    implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"

    implementation 'org.json:json:20200518'
    implementation platform('software.amazon.awssdk:bom:2.20.56')
    implementation 'software.amazon.awssdk:dynamodb'

}


docker {
    println "Building Docker image for ${project.name}:${project.version}"
    println(tasks.bootJar.outputs.files)
    // 이미지 이름
    name rootProject.name + '-' + project.name + ':' + version
    // 도커파일 경로
    dockerfile file('../Dockerfile')
    // 빌드할 파일(어떤 파일들을 Dockerfile 에 복사할 것인지)
    files tasks.bootJar.outputs.files
    // 도커를 빌드함에 있어서 Dockerfile 에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}